{{ if .Values.catalogueMigrations.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  generateName: catalogue-migrations-
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      annotations:
{{ toYaml .Values.catalogueMigrations.annotations | indent 8 }}
    spec:
      restartPolicy: Never
      containers:
      - name: migrations
        image: weaveworksdemos/catalogue-db:0.3.0
        command:
        - "/bin/bash"
        args:
        - "/app/migrations.sh"
        volumeMounts:
        - mountPath: /app
          readOnly: true
          name: migrations-files
      volumes:
      - name: migrations-files
        configMap:
          name: catalogue-migrations-files
          items:
          - key: migrations.sh
            path: migrations.sh
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalogue-migrations-files
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
data:
  migrations.sh: |
    #!/bin/bash
    source /vault/secrets/env
    printenv
    cat <<EOF > /docker-entrypoint-initdb.d/my.cnf
    [client]
    host=""
    user=""
    password=""
    database=""
    EOF
    cat /docker-entrypoint-initdb.d/my.cnf
    mysql --version
    #mysql --defaults-extra-file=/app/my.cnf < /docker-entrypoint-initdb.d/dump.sql
{{ end }}
